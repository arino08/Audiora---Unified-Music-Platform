{"ast":null,"code":"export const authConfig = {\n  // Google's OAuth 2.0 issuer URL\n  issuer: 'https://accounts.google.com',\n  // URL of the SPA to redirect the user to after login\n  redirectUri: window.location.origin,\n  // The SPA's id - This needs to be configured in Google Cloud Console\n  // To get a Google OAuth client ID:\n  // 1. Go to https://console.cloud.google.com/\n  // 2. Create a new project or select existing one\n  // 3. Enable Google+ API and YouTube Data API v3\n  // 4. Go to Credentials > Create Credentials > OAuth 2.0 Client ID\n  // 5. Set Application type to \"Web application\"\n  // 6. Add authorized redirect URIs: http://localhost:4200\n  // 7. Copy the Client ID below\n  clientId: '582548666839-6ksnlks75clc57j13cb4cgru4dkludqf.apps.googleusercontent.com',\n  // TODO: Replace with actual Google OAuth client ID\n  // OAuth2 Code Flow with PKCE (Proof Key for Code Exchange)\n  responseType: 'code',\n  // Scopes for permissions the client should request\n  // openid: OpenID Connect authentication\n  // profile: Access to user's profile information\n  // email: Access to user's email address\n  // https://www.googleapis.com/auth/youtube: YouTube Data API access for YouTube Music integration\n  // Temporarily narrow scope to debug 400 errors; re-add YouTube scope after successful exchange\n  scope: 'openid profile email',\n  // Show debug information in the console (disable in production)\n  showDebugInformation: true,\n  // Removed sessionChecksEnabled (Google discovery lacks check_session_iframe) and silent refresh (not needed for PKCE)\n  // Time factor for token refresh (75% of token lifetime)\n  timeoutFactor: 0.75,\n  // Clear hash fragment after login to keep URL clean\n  clearHashAfterLogin: true,\n  // Use PKCE for security (recommended)\n  disablePKCE: false,\n  // Preserve the requested route after login for better UX\n  preserveRequestedRoute: true,\n  // Custom query parameters if needed\n  customQueryParams: {\n    prompt: 'select_account',\n    access_type: 'offline',\n    include_granted_scopes: 'true'\n  },\n  // Disable strict discovery document validation for development\n  // This prevents validation errors when using placeholder client IDs\n  strictDiscoveryDocumentValidation: false,\n  // Skip issuer check for development\n  skipIssuerCheck: true\n};\n// Configuration for Google's well-known endpoints\n// Google automatically provides discovery document at:\n// https://accounts.google.com/.well-known/openid-configuration\nexport const discoveryDocumentUrl = 'https://accounts.google.com/.well-known/openid-configuration';","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}